<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithms on Dilawar's Blog</title><link>https://dilawar.github.io/categories/algorithms/</link><description>Recent content in algorithms on dilawar.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 11 Jun 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/categories/algorithms/index.xml" rel="self" type="application/rss+xml"/><item><title>Online method for computing variance</title><link>https://dilawar.github.io/posts/2015/2015-06-11-online-method-for-computing-variance/</link><pubDate>Thu, 11 Jun 2015 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2015/2015-06-11-online-method-for-computing-variance/</guid><description>
This method is due to Welford, described in TAOCP - Volume 2 by Donald E. Knuth. The merit of this method is discussed by many people …</description></item><item><title>Simulating Random Walks using Langevin Equation</title><link>https://dilawar.github.io/posts/2014/2014-10-30-simulating-random-walks-using-langevin-equation/</link><pubDate>Thu, 30 Oct 2014 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2014/2014-10-30-simulating-random-walks-using-langevin-equation/</guid><description>
Random walks (Brownian motions), in addition to their theoretical potency (describes macro-scale behavior of gas starting with micro-scale …</description></item><item><title>Calculating max-flow using push-relabel method</title><link>https://dilawar.github.io/posts/2013/2013-04-14-calculating-max-flow-using-push_relabel-method/</link><pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2013/2013-04-14-calculating-max-flow-using-push_relabel-method/</guid><description>
Calculating maximum flow in a flow-network is a fundamental problem. It has been observed that smart implementation of ‘push-relabel’ …</description></item><item><title>Getting caught in a loop while traversing a (directed acyclic) graph</title><link>https://dilawar.github.io/posts/2013/2013-01-29-are-your-getting-into-loops-when-traversing-a-directed-acyclic-graph/</link><pubDate>Tue, 29 Jan 2013 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2013/2013-01-29-are-your-getting-into-loops-when-traversing-a-directed-acyclic-graph/</guid><description>
How to detect if you are getting caught inside a loop when you are traversing a directed graph. This is equivalent of checking if you graph …</description></item><item><title>Quine McClusky algorithm in Haskell</title><link>https://dilawar.github.io/posts/2012/2012-09-05-quine-mcclusky-algorithm-in-haskell/</link><pubDate>Wed, 05 Sep 2012 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2012/2012-09-05-quine-mcclusky-algorithm-in-haskell/</guid><description>
A small program tingu is implemented in haskell. It reads minterms from a file and produce the output on console. It is hosted on github. …</description></item><item><title>Snakes : Python library for petri nets</title><link>https://dilawar.github.io/posts/2012/2012-03-09-snakes-python-library-for-petri-nets/</link><pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2012/2012-03-09-snakes-python-library-for-petri-nets/</guid><description>
It looks promising and cool. Snakes is a Python library for working with Petri-nets. I am playing around with it so can’t say much about it …</description></item><item><title>Langford pairs in Haskell</title><link>https://dilawar.github.io/posts/2011/2011-12-01-langford-pairs-in-haskell/</link><pubDate>Thu, 01 Dec 2011 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2011/2011-12-01-langford-pairs-in-haskell/</guid><description>
 \This implementation is not-very naive but it is not very efficient either. It can generate solutions up to n = 12, then it gets very slow. …</description></item><item><title>Notes : Graph and Linear Systems in Laplacian Matrix</title><link>https://dilawar.github.io/posts/2010/2010-11-28-notes-graphand-linear-systems-in-laplacian-matrix/</link><pubDate>Sun, 28 Nov 2010 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2010/2010-11-28-notes-graphand-linear-systems-in-laplacian-matrix/</guid><description>
I have collected information regarding latest progress made in solving of system of Linear Equations. Interestingly this works uses spanning …</description></item></channel></rss>