<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>language on Dilawar's Blog</title><link>https://dilawar.github.io/categories/language/</link><description>Recent content in language on dilawar.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 09 Jul 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/categories/language/index.xml" rel="self" type="application/rss+xml"/><item><title>Lobbying for Haskell</title><link>https://dilawar.github.io/posts/2013/2013-07-09-lobbyying-for-haskell/</link><pubDate>Tue, 09 Jul 2013 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2013/2013-07-09-lobbyying-for-haskell/</guid><description>
… but one must not be surprised if outsiders don’t take Haskell too seriously… [We] say a lot about what functional programming isn’t: It …</description></item><item><title>Python like string split in Haskell</title><link>https://dilawar.github.io/posts/2012/2012-04-15-python-like-string-split-in-haskell/</link><pubDate>Sun, 15 Apr 2012 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2012/2012-04-15-python-like-string-split-in-haskell/</guid><description>
Following function split a string into a list of strings at a given string. For example split “dilawar raw war” “aw” returns [“dil”, “ar r” …</description></item><item><title>Check Primality of a number in Haskell</title><link>https://dilawar.github.io/posts/2011/2011-09-05-check-primality-of-a-number-in-haskell/</link><pubDate>Mon, 05 Sep 2011 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2011/2011-09-05-check-primality-of-a-number-in-haskell/</guid><description>
Statement Define a function isPrime which accepts a number n, and returns True if n is prime and False otherwise. The easiest way to test …</description></item></channel></rss>