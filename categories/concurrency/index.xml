<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Concurrency on Dilawar's Blog</title><link>https://dilawar.github.io/categories/concurrency/</link><description>Recent content in Concurrency on Dilawar's Blog</description><generator>Hugo</generator><language>en-us</language><copyright>© 2021, Dilawar Singh</copyright><lastBuildDate>Sun, 14 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/categories/concurrency/index.xml" rel="self" type="application/rss+xml"/><item><title>An Example of Boost Fiber</title><link>https://dilawar.github.io/posts/2021/2021-11-14-example-boost-fiber/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2021/2021-11-14-example-boost-fiber/</guid><description>&lt;p>A fiber is &lt;em>just a thread implemented in user space&lt;/em>.&lt;/p>
&lt;p>Fibers are easier to reason about and have advantages such as much cheaper
context switching.  Fibers are very well suited for handling concurrent IO
operations. In such situations a processor mostly wait for the data to become
available and threads usually have pretty big context switching cost. So
multiple fibers running in a single thread is an effective solution.&lt;/p>
&lt;p>It is also much easier to reason about concurrency with fibers. Watch this
great talk by Nat Goldman on  &lt;a href="https://youtu.be/e-NUmyBou8Q">Youtube&lt;/a>.&lt;/p></description></item></channel></rss>