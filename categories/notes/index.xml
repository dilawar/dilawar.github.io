<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on Dilawar's Blog</title><link>https://dilawar.github.io/categories/notes/</link><description>Recent content in Notes on Dilawar's Blog</description><generator>Hugo</generator><language>en-us</language><copyright>© 2021, Dilawar Singh</copyright><lastBuildDate>Sun, 03 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/categories/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>All you needed to know about MFCC</title><link>https://dilawar.github.io/posts/2021/2021-01-03-all-you-needed-to-know-about-mfcc/</link><pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2021/2021-01-03-all-you-needed-to-know-about-mfcc/</guid><description>&lt;ul>
&lt;li>See answers by Amir Poorjam on RG &lt;a href="https://www.researchgate.net/post/Why_we_take_only_12-13_MFCC_coefficients_in_feature_extraction">https://www.researchgate.net/post/Why_we_take_only_12-13_MFCC_coefficients_in_feature_extraction&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/Screenshot_2021-01-04-Why-we-take-only-12-13-MFCC-coefficients-in-feature-extraction--254x300.png" alt="RG: Amir Poorjam">&lt;/p>
&lt;ul>
&lt;li>He has also given his lecture notes &lt;a href="https://www.researchgate.net/profile/Amir-Hossein-Poorjam/post/Why_we_take_only_12-13_MFCC_coefficients_in_feature_extraction/attachment/5e29bb633843b093839ccbc1/AS%3A850528695238656%401579793251438/download/Mfccs.pdf">https://www.researchgate.net/profile/Amir-Hossein-Poorjam/post/Why_we_take_only_12-13_MFCC_coefficients_in_feature_extraction/attachment/5e29bb633843b093839ccbc1/AS%3A850528695238656%401579793251438/download/Mfccs.pdf&lt;/a> . These are very good.&lt;/li>
&lt;li>Have a look at this thesis and read the portions you like &lt;a href="https://ir.canterbury.ac.nz/handle/10092/7561">https://ir.canterbury.ac.nz/handle/10092/7561&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Review of small microcontrollers for embedded systems | The Amazing $1 microcontrollers</title><link>https://dilawar.github.io/posts/2020/2020-11-22-reviews-of-small-micro-controllers-for-embedded-systems/</link><pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-22-reviews-of-small-micro-controllers-for-embedded-systems/</guid><description>&lt;p>Look no further! &lt;a href="https://jaycarlson.net/microcontrollers/">https://jaycarlson.net/microcontrollers/&lt;/a> (&lt;a href="https://web.archive.org/web/20201114011135/https://jaycarlson.net/microcontrollers/">Wayback Machine link&lt;/a>) has the most exhaustive review of µC I&amp;rsquo;ve ever read.&lt;/p>
&lt;p>And here is the Hacker News links &lt;a href="https://hn.algolia.com/?q=amazing+%241+microcontroller">https://hn.algolia.com/?q=amazing+%241+microcontroller&lt;/a>&lt;/p></description></item><item><title>Generate Android Bundle (.aab file) for a Cordova app</title><link>https://dilawar.github.io/posts/2020/2020-11-20-generate-android-bundle-aab-file-for-a-cordova-app/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-20-generate-android-bundle-aab-file-for-a-cordova-app/</guid><description>&lt;p>Cordova 8.1+ supports generating Android Bundle (&lt;code>.aab&lt;/code> file). Usually cordova generates an &lt;code>.apk&lt;/code> file for your app. Playstore often warns about &lt;code>.apk&lt;/code> file about it&amp;rsquo;s bloated size.&lt;/p>
&lt;p>To generate an &lt;code>.aab&lt;/code> file, add &lt;code>--packageType=bundle&lt;/code> option to your &lt;code>cordova build&lt;/code> command.&lt;/p>
&lt;pre tabindex="0">&lt;code>cordova build android --release -- --packageType=bundle
&lt;/code>&lt;/pre>&lt;h2 id="signed-bundles">Signed bundles&lt;/h2>
&lt;p>Here is the command I use to generate a singed bundle.&lt;/p>
&lt;pre tabindex="0">&lt;code>cordova build android --release -- --keystore=~/keystore/dilawar.jks --storePassword=$(KEYSTORE_PASSWORD) --alias=dilawar --password=$(KEYSTORE_PASSWORD) --packageType=bundle --webpack.mode=production
&lt;/code>&lt;/pre>&lt;h1 id="the-old-way-to-generate-bundle">The old way to generate bundle&lt;/h1>
&lt;blockquote>
&lt;p>See the discussion &lt;a href="https://github.com/apache/cordova-android/issues/610">here&lt;/a>. And feature request here &lt;a href="https://github.com/apache/cordova-android/issues/729">https://github.com/apache/cordova-android/issues/729&lt;/a> .&lt;/p></description></item><item><title>Getting X11 (XQuartz) to work on OSX</title><link>https://dilawar.github.io/posts/2020/2020-11-18-getting-x11-xquartz-to-work-on-osx/</link><pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-18-getting-x11-xquartz-to-work-on-osx/</guid><description>&lt;p>Today I finally managed to get &lt;a href="https://www.xquartz.org/">XQuartz&lt;/a> to work on a mac mini. I use this machine as server to test my code for OSX. Its a horrible machine to do any development (I am an OSX noob and a terminal junkie).&lt;/p>
&lt;p>Usually I login to this machine (named &lt;code>strudel&lt;/code>) from my Linux workstation using &lt;code>ssh&lt;/code> e.g. &lt;code>ssh -Y strudel&lt;/code> or &lt;code>ssh -Y 192.168.1.2&lt;/code> where 192.168.1.2 is ip address of strudel on LAN. Once a while, I need graphics.&lt;/p></description></item><item><title>argmax in pure Python</title><link>https://dilawar.github.io/posts/2020/2020-11-12-argmax-in-pure-python/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-12-argmax-in-pure-python/</guid><description>&lt;p>Python does not have an inbuilt &lt;code>argmax&lt;/code> function. &lt;code>numpy&lt;/code> does.&lt;/p>
&lt;p>Here is one implementation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">argmax&lt;/span>(ls : list) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> int:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _m, _mi &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>math&lt;span style="color:#f92672">.&lt;/span>inf, &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#75715e"># requires `import math` at top&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i, v &lt;span style="color:#f92672">in&lt;/span> enumerate(ls):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> v &lt;span style="color:#f92672">&amp;gt;&lt;/span> _m:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _m &lt;span style="color:#f92672">=&lt;/span> v
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _mi &lt;span style="color:#f92672">=&lt;/span> i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> _mi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There is also a one-liner which I often use: &lt;code>max(zip(ls, range(len(ls))))[1]&lt;/code> where &lt;code>ls&lt;/code> is the input list. To my surprise, the one liner is slower than &lt;code>argmax&lt;/code> defined above (Python3.9 on openSUSE-Tumbleweed/Intel).&lt;/p></description></item><item><title>Adding google-analytics to your vue application</title><link>https://dilawar.github.io/posts/2020/2020-11-10-adding-google-analytics-to-your-vue-application/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-10-adding-google-analytics-to-your-vue-application/</guid><description>&lt;p>I am using Google&amp;rsquo;s global site gags (gtags) on my framework7+vue application to collect data. The gtag official documentation &lt;a href="https://developers.google.com/analytics/devguides/collection/gtagjs#install_the_global_site_tag">has an easy&lt;/a> to use example. Anyway, I prefer &lt;code>vue-gtag&lt;/code> library.&lt;/p>
&lt;ul>
&lt;li>install vue-gtag &lt;code>npm install vue-gtag&lt;/code>&lt;/li>
&lt;li>Add following to your vue app. Usually you have to edit &lt;code>src/js/app.js&lt;/code> file or equivalent file where vue is being initialized.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Init google analytics
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">VueGtag&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;vue-gtag&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">Vue&lt;/span>.&lt;span style="color:#a6e22e">use&lt;/span>(&lt;span style="color:#a6e22e">VueGtag&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">config&lt;/span>&lt;span style="color:#f92672">:&lt;/span> { &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;UA-180198765-1&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where &lt;code>id&lt;/code> key in &lt;code>config&lt;/code> dictionary is your tracking id.&lt;/p></description></item><item><title>fd is an awesome replacement of find command</title><link>https://dilawar.github.io/posts/2020/2020-11-09-fd-is-an-awesome-replacement-of-find-command/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-09-fd-is-an-awesome-replacement-of-find-command/</guid><description>&lt;p>Recently, I came across &lt;a href="https://github.com/sharkdp/fd">fd&lt;/a> command. It is written in Rust and suppose to replace &lt;code>find&lt;/code> command.&lt;/p>
&lt;p>&lt;code>fd&lt;/code> is amazing, PERIOD. It has much better user experience. Check out the official demo below,&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sharkdp/fd/master/doc/screencast.svg" alt="OFFICIAL DEMO">&lt;/p>
&lt;p>My pet peeve with &lt;code>find&lt;/code> command is not that it has too many options, but that these options are hard to figure out. I don&amp;rsquo;t use &lt;code>find&lt;/code> so often to build a muscle memory. So a simpler version is most welcome.&lt;/p></description></item><item><title>Debugging python extension in gdb</title><link>https://dilawar.github.io/posts/2020/2020-11-03-debugging-python-extension-in-gdb/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-03-debugging-python-extension-in-gdb/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gdb -ex r --args python myscript.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are using virtual environment then you are likely to run into the following error.&lt;/p>
&lt;p>&lt;code>/home/dilawars/PY38/shims/python&amp;quot;: not in executable format: File format not recognized&lt;/code>&lt;/p>
&lt;p>Because, in virtualenv, the command &lt;code>python&lt;/code> is a bash script wrapping the real python executable. To bypass this, just do the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ gdb -ex r --args bash python myscript.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to Fix or Get Rid of "Briefly Unavailable for Scheduled Maintenance" message in WordPress</title><link>https://dilawar.github.io/posts/2020/2020-09-10-how-to-fix-briefly-unavailable-for-scheduled-maintenance-error-in-wordpress/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-09-10-how-to-fix-briefly-unavailable-for-scheduled-maintenance-error-in-wordpress/</guid><description>&lt;p>&lt;strong>Reason&lt;/strong>: During the update of a plugin or a theme, you refreshed the page,
moved to another page, or the upgrade failed due to some other reason.&lt;/p>
&lt;p>WordPress creates &lt;code>.maintenace&lt;/code> file in the top-level directory before the start
of the update process. And removes it if the upgrade is successful.&lt;/p>
&lt;p>&lt;strong>Solution:&lt;/strong> Delete the &lt;code>.maintenace&lt;/code> file.&lt;/p></description></item></channel></rss>