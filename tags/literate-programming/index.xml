<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>literate-programming on Dilawar's Blog</title><link>https://dilawar.github.io/tags/literate-programming/</link><description>Recent content in literate-programming on Dilawar's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 30 Oct 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/literate-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Python front-end for Noweb literate tool</title><link>https://dilawar.github.io/posts/2013/2013-10-30-python-front-end-for-noweb-literate-tool/</link><pubDate>Wed, 30 Oct 2013 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2013/2013-10-30-python-front-end-for-noweb-literate-tool/</guid><description>The idea behind literate programming, that a program can be a piece of literature, is due to Donald E. Knuth. Knuth is an extremely respected figure in programming community (and also among combinatorics and computer science people). In this paradigm, one does not write a program based on how computer would reason about it but rather follows a human like flow. It is the job of literate programming tool to convert this human-readable program into something which make sense to a computer.</description></item></channel></rss>