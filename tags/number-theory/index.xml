<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>number-theory on Dilawar's Blog</title><link>https://dilawar.github.io/tags/number-theory/</link><description>Recent content in number-theory on dilawar.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 05 Sep 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/number-theory/index.xml" rel="self" type="application/rss+xml"/><item><title>Check Primality of a number in Haskell</title><link>https://dilawar.github.io/posts/2011/2011-09-05-check-primality-of-a-number-in-haskell/</link><pubDate>Mon, 05 Sep 2011 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2011/2011-09-05-check-primality-of-a-number-in-haskell/</guid><description>
Statement Define a function isPrime which accepts a number n, and returns True if n is prime and False otherwise. The easiest way to test â€¦</description></item></channel></rss>