<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>argmax on Dilawar's Blog</title><link>https://dilawar.github.io/tags/argmax/</link><description>Recent content in argmax on Dilawar's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/argmax/index.xml" rel="self" type="application/rss+xml"/><item><title>argmax in pure Python</title><link>https://dilawar.github.io/posts/2020/2020-11-12-argmax-in-pure-python/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-11-12-argmax-in-pure-python/</guid><description>Python does not have an inbuilt argmax function. numpy does.
Here is one implementation.
def argmax(ls : list) -&amp;gt; int: _m, _mi = -math.inf, 0 # requires `import math` at top for i, v in enumerate(ls): if v &amp;gt; _m: _m = v _mi = i return _mi There is also a one-liner which I often use: max(zip(ls, range(len(ls))))[1] where ls is the input list. To my surprise, the one liner is slower than argmax defined above (Python3.</description></item></channel></rss>