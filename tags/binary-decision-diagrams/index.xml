<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>binary-decision-diagrams on Dilawar's Blog</title><link>https://dilawar.github.io/tags/binary-decision-diagrams/</link><description>Recent content in binary-decision-diagrams on Dilawar's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Nov 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/binary-decision-diagrams/index.xml" rel="self" type="application/rss+xml"/><item><title>Binary Decision Diagrams and VLSI Verification</title><link>https://dilawar.github.io/posts/2010/2010-11-25-binary-decision-diagrams-and-vlsi-verification/</link><pubDate>Thu, 25 Nov 2010 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2010/2010-11-25-binary-decision-diagrams-and-vlsi-verification/</guid><description>[in progress : I&amp;rsquo;ll put up the solution after Nov 28. I have to submit it as assignment so can not take the risk of being copied or so.] These days simulation is the most prominent technique for verification. However, simulation can only cover a part of all cases possible thus simulation does not guarantee that certain properties will hold everywhere in the system. For example, any complex asynchronous boolean circuit with 100 variables will have 2100 combination.</description></item></channel></rss>