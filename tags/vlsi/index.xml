<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vlsi on Dilawar's Blog</title><link>https://dilawar.github.io/tags/vlsi/</link><description>Recent content in vlsi on Dilawar's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Nov 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/vlsi/index.xml" rel="self" type="application/rss+xml"/><item><title>Combinational circuits - Equivalence checking</title><link>https://dilawar.github.io/posts/2010/2010-11-19-combinational-circuits-equivalence-checking/</link><pubDate>Fri, 19 Nov 2010 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2010/2010-11-19-combinational-circuits-equivalence-checking/</guid><description>Given a VLSI entity and its two description, establishing if both of them are equivalent is fundamental problem in VLSI verification. In this post, I am going to give describe an small part of this problem. Lets say someone has provided us with an behavioral description of an entity. For example lets say the given behavior of this entity is following. [caption id=&amp;ldquo;attachment_255&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;326&amp;rdquo; caption=&amp;ldquo;a, b, c, and d are input to this entity and e is output.</description></item></channel></rss>