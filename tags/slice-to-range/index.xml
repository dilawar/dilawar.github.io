<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Slice-to-Range on Dilawar's Blog</title><link>https://dilawar.github.io/tags/slice-to-range/</link><description>Recent content in Slice-to-Range on Dilawar's Blog</description><generator>Hugo</generator><language>en-us</language><copyright>Â© 2021, Dilawar Singh</copyright><lastBuildDate>Thu, 08 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/slice-to-range/index.xml" rel="self" type="application/rss+xml"/><item><title>In Python3, converting slice to range</title><link>https://dilawar.github.io/posts/2020/2020-10-08-python3-slice-to-range/</link><pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-10-08-python3-slice-to-range/</guid><description>&lt;p>If you want to override &lt;code>[]&lt;/code> operator in Python, you may need to handle &lt;code>slice&lt;/code> as well. For example in the following &lt;code>__getindex__&lt;/code> method which implements &lt;code>[]&lt;/code>, argument &lt;code>key&lt;/code> could be a single &lt;code>int&lt;/code>, for example, &lt;code>a[1]&lt;/code> or &lt;code>a[-3]&lt;/code>; or it could be a &lt;code>slice&lt;/code> e.g., &lt;code>a[1:4]&lt;/code> is a slice.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> __getitem__(self, key): 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#75715e"># fixed data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> isinstance(key, slice): 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> [x[i] &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> slice2range(slice, len(x)] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> x[key]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ideally, I\&amp;rsquo;d have loved if &lt;code>range(key)&lt;/code> would automatically turn/cast a &lt;code>slice&lt;/code> to the equivalent &lt;code>range&lt;/code>. See this &lt;a href="https://stackoverflow.com/questions/13855288/turn-slice-into-range">question on SO&lt;/a>.&lt;/p></description></item></channel></rss>