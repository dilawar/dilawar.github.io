<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>djikstra-path-algorithm on Dilawar's Blog</title><link>https://dilawar.github.io/tags/djikstra-path-algorithm/</link><description>Recent content in djikstra-path-algorithm on Dilawar's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 08 Dec 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/djikstra-path-algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Djikestra Shortest Path Algorithm : LEDA performance</title><link>https://dilawar.github.io/posts/2011/2011-12-08-djikestra-shortest-path-algorithm-leda-performance/</link><pubDate>Thu, 08 Dec 2011 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2011/2011-12-08-djikestra-shortest-path-algorithm-leda-performance/</guid><description>I have written this program which tests LEDA library performance for shortest path algorithm performance. This library is pretty good. Much easier to use than boost libraries. [sourcecode language=&amp;ldquo;c&amp;rdquo;] /* * ===================================================================================== * * Filename: dikkstra.cpp * * Description: Dijksjtra algorithm for calculating shortest path. * * Version: 1.0 * Created: Tuesday 06 December 2011 04:45:57 IST * Revision: none * Compiler: gcc * * Author: Dilawar Singh (Graduate Student, EE IITB), dilawar@ee.</description></item></channel></rss>