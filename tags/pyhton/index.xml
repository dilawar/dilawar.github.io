<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pyhton on Dilawar's Blog</title><link>https://dilawar.github.io/tags/pyhton/</link><description>Recent content in Pyhton on Dilawar's Blog</description><generator>Hugo</generator><language>en-us</language><copyright>Â© 2021, Dilawar Singh</copyright><lastBuildDate>Mon, 14 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dilawar.github.io/tags/pyhton/index.xml" rel="self" type="application/rss+xml"/><item><title>cv2.imwrite/cv2.imread are faster than np.save/np.load on numpy matrices with integers</title><link>https://dilawar.github.io/posts/2020/2020-12-14-it-is-faster-to-use-cv2-imwrite-cv2-imread-than-np-save-np-load-on-numpy-matrices-with-integers/</link><pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate><guid>https://dilawar.github.io/posts/2020/2020-12-14-it-is-faster-to-use-cv2-imwrite-cv2-imread-than-np-save-np-load-on-numpy-matrices-with-integers/</guid><description>&lt;p>In one of the ongoing projects, I generate a lot of small matrices (~1000 entries). These are often written to the disk and read from it. I was trying to optimize this step since this step run in a REST api.&lt;/p>
&lt;p>The standard way is &lt;code>numpy.save&lt;/code> and &lt;code>numpy.load&lt;/code> which works fine. My experience with &lt;code>opencv&lt;/code> made me wonder if &lt;code>cv2.imwrite&lt;/code> and &lt;code>cv2.imread&lt;/code> can be used. The later saves the matrices to png file which works without any loss of data if you have 8 or 16 bit integer values in your matrices. I do.&lt;/p></description></item></channel></rss>